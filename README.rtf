{\rtf1\ansi\ansicpg936\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red129\green95\blue3;
\red0\green0\blue0;\red28\green0\blue207;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c50580\c37140\c1210;
\csgenericrgb\c0\c0\c0\c70000;\csgenericrgb\c11000\c0\c81000;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 SPAD Transient Imaging
\fs30 \
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf2 Requirements:\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\fs24 \cf2 Operating System\
 - Tested on MacOS and Windows\
Python Version\
 - Python 3.8+\
Python Libraries\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf4 - `\cf5 numpy\cf4 `\cf2 \
\cf4 - `\cf5 matplotlib\cf4 `\cf2 \
\cf4 - `\cf5 scipy\cf4 `\cf2 \
\cf4 - `\cf5 glob\cf4 `\cf2 \
\cf4 - `\cf5 re\cf4 `\cf2 \
\cf4 - `\cf5 imageio\cf4 `\cf2 \
\cf4 - `\cf5 tqdm\cf4 `\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\fs30 \cf2 File Overview:\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\fs24 \cf5 measureapp61-new.py\cf2 : Make DMD project the grid pattern, measure the histograms and save them as .npy files to \'93data\'94 folder.\
\pard\tx593\pardeftab593\partightenfactor0
\cf2 rows, cols = \cf6 50\cf2 ,\cf6 50 <- resolution of the transient image\
\cf2 device.acquisition_time_ms = \cf6 20000 <- SPAD acquisition time\cf2 \
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf4 How to run this code:\
	1) Transfer the code to the lab PC.\
	2) Connect the DMD to lab PC with the HDMI adapter, have the DMD running on Video Mode.\
	3) Adjust the parameter settings according to your needs.\
	4) Position the SPAD, DMD and the object. Switch off the light and close the curtains of the booth. Change the laser settings. My paper used 50 MHz, 100% power. This can be very dangerous, so don\'92t go in the booth in the middle of the experiment.\
	5) Run the code, wait for it to finish running.\
	6) A few .npy files should be generated in \'93data\'94 folder.\
\
i\cf5 mage-generation.py\cf2 : Generates an accumulated image from the input .npy files.\cf4 \
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf7 folder = "data/two50x50-1" <- folder with .npy data, must include \'93size x size\'94\
mn = 25000  <- frame count, maximum 25000\
group_size = 1  <- group_size = 25000/mn \
c_dual = 1 <- virtual light source, the bigger the brighter\
def denoise_histogram(h, method="moving", window=150) <- denoise method\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf4 How to run this code:\
	1) Put the code and \'93data\'94 folder in the same folder. Any computer is OK to use.\
	2) Change the \'93folder\'94 parameter to the folder you want to process.\
	3) Adjust other parameters according to your needs.\
	4) Run the code, and an .png accumulated image should be generated in \'93data\'94 folder.\
\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf5 gif-generation.py: \cf2 Generates an transient animation from the input .npy files.\
Parameters are the same as in \cf4 i\cf5 mage-generation.py\
\cf4 How to run this code:\
	1) Put the code and \'93data\'94 folder in the same folder. Any computer is OK to use.\
	2) Change the \'93folder\'94 parameter to the folder you want to process.\
	3) Adjust other parameters according to your needs.\
	4) Run the code, and a .mp4 video should be generated in \'93data\'94 folder.}